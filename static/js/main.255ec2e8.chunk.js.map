{"version":3,"sources":["components/Session.module.css","components/Activity.module.css","components/Display.module.css","assets/audio/alarm.mov","components/Clock.module.css","components/ControlPanel.module.css","actions/index.js","components/Activity.js","components/Timer.js","components/Display.js","utils/Alarm.js","utils/worker.js","utils/workerSetup.js","components/Clock.js","components/ControlPanel.js","components/Session.js","App.js","reducers/index.js","index.js"],"names":["module","exports","SESSION_TIMER","setDuration","duration","type","setElapsedTime","elapsedTime","setBreakDuration","breakDuration","setTimer","timerType","connect","state","currentTimer","props","activity","className","styles","Timer","height","width","startAngle","Math","PI","endAngle","canvas","drawTimer","context","beginPath","arc","lineWidth","strokeStyle","stroke","drawBackground","this","document","querySelector","getContext","total","fraction","current","currentAngle","clearRect","id","Component","Display","seconds","mins","floor","secs","String","padStart","display","audio","Audio","AlarmSound","load","play","pause","timerID","self","addEventListener","e","data","setInterval","postMessage","clearInterval","WebWorker","worker","blob","Blob","Worker","URL","createObjectURL","Clock","running","startTimer","stopTimer","terminate","event","tick","newTime","currentDuration","Alarm","sessionTimerRunning","clock","dispatch","time","ControlPanel","toggleRunning","bind","reset","stop","controlPanel","onClick","src","alt","Session","increment","pomodoro","decrement","minutesSeconds","title","session","down","invert","up","opacity","style","defaultState","action","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.255ec2e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"session\":\"Session_session__2LXO1\",\"title\":\"Session_title__2c5N3\",\"duration\":\"Session_duration__1wXZH\",\"up\":\"Session_up__3LJGD\",\"down\":\"Session_down__1eKeD\",\"invert\":\"Session_invert__2VS3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activity\":\"Activity_activity__2v8zA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Display_display__1ykLO\"};","module.exports = __webpack_public_path__ + \"static/media/alarm.79287d13.mov\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clock\":\"Clock_clock__7203k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlPanel\":\"ControlPanel_controlPanel__1NgtM\"};","export const TOGGLE_RUNNING = 'TOGGLE_RUNNING'\nexport const STOP_TIMER = 'STOP_TIMER'\nexport const SET_DURATION = 'SET_DURATION'\nexport const SET_BREAK_DURATION = 'SET_REST_DURATION'\nexport const SET_ELAPSED_TIME = 'SET_ELAPSED_TIME'\nexport const DEFAULT_DURATION = 25 * 60\nexport const DEFAULT_BREAK_DURATION = 5 * 60\n\nexport const SELECT_TIMER = 'SELECT_TIMER'\nexport const SESSION_TIMER = 'SESSION_TIMER'\nexport const BREAK_TIMER = 'BREAK_TIMER'\n\nexport const toggleRunning = () => ({\n  type: TOGGLE_RUNNING,\n})\n\nexport const stopTimer = () => ({\n  type: STOP_TIMER,\n})\n\nexport const setDuration = duration => ({\n  type: SET_DURATION,\n  duration,\n})\n\nexport const setElapsedTime = elapsedTime => ({\n  type: SET_ELAPSED_TIME,\n  elapsedTime,\n})\n\nexport const setBreakDuration = breakDuration => ({\n  type: SET_BREAK_DURATION,\n  breakDuration,\n})\n\nexport const setTimer = timerType => ({\n  type: SELECT_TIMER,\n  timerType,\n})\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { SESSION_TIMER } from '../actions'\nimport styles from './Activity.module.css'\n\nfunction Activity(props) {\n  const activity = props.currentTimer === SESSION_TIMER ? 'work' : 'break'\n  return <div className={styles.activity}>{activity}</div>\n}\n\nconst mapStateToProps = state => ({\n  currentTimer: state.timerType,\n})\n\nexport default connect(mapStateToProps)(Activity)\n","import React, { Component } from 'react'\n\nclass Timer extends Component {\n  height = 300\n  width = 300\n  startAngle = -0.5 * Math.PI\n  endAngle = 1.5 * Math.PI\n  canvas = null\n  componentDidMount() {\n    this.canvas = document.querySelector('#myCanvas')\n    this.context = this.canvas.getContext('2d')\n    this.drawTimer(this.context, this.startAngle, this.endAngle)\n  }\n  componentDidUpdate() {\n    const context = this.canvas.getContext('2d')\n    const { total, current } = this.props\n    const fraction = (total - current) / total\n    const currentAngle = this.endAngle - 2 * Math.PI * fraction\n    context.clearRect(0, 0, this.width, this.height)\n    this.drawBackground(context)\n    this.drawTimer(context, currentAngle, this.endAngle)\n  }\n  drawTimer = (context, startAngle, endAngle) => {\n    context.beginPath()\n    context.arc(150, 150, 100, startAngle, endAngle)\n    context.lineWidth = 5\n    context.strokeStyle = 'darkcyan'\n    context.stroke()\n  }\n  drawBackground = context => {\n    context.beginPath()\n    context.arc(150, 150, 100, this.startAngle, this.endAngle)\n    context.lineWidth = 5\n    context.strokeStyle = '#eee'\n    context.stroke()\n  }\n  render() {\n    return (\n      <div>\n        <canvas id=\"myCanvas\" width={this.width} height={this.height}></canvas>\n      </div>\n    )\n  }\n}\n\nexport default Timer\n","import React from 'react'\nimport styles from './Display.module.css'\n\nconst Display = ({ seconds }) => {\n  const mins = Math.floor(seconds / 60)\n  const secs = String(seconds % 60).padStart(2, '0')\n  return (\n    <div className={styles.display}>\n      {mins}:{secs}\n    </div>\n  )\n}\n\nexport default Display\n","import AlarmSound from '../assets/audio/alarm.mov'\n\nclass Alarm {\n  constructor() {\n    this.audio = new Audio(AlarmSound)\n    this.audio.load()\n  }\n  play() {\n    this.audio.play()\n  }\n  stop() {\n    this.audio.pause()\n    this.audio.load()\n  }\n}\n\nexport default new Alarm()\n","/* eslint-disable no-restricted-globals */\nexport default () => {\n  let timerID = null\n  self.addEventListener('message', e => {\n    if (!e) return\n    if (e.data === 'start') {\n      timerID = setInterval(() => {\n        postMessage('tick')\n      }, 1000)\n    } else if (e.data === 'stop') {\n      clearInterval(timerID)\n      postMessage('timer stopped')\n    }\n  })\n}\n","export default class WebWorker {\n  constructor(worker) {\n    const blob = new Blob([`(${worker})()`])\n    return new Worker(URL.createObjectURL(blob))\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  setElapsedTime,\n  setTimer,\n  SESSION_TIMER,\n  BREAK_TIMER,\n} from '../actions'\nimport Timer from './Timer'\nimport Display from './Display'\nimport Alarm from '../utils/Alarm'\nimport worker from '../utils/worker'\nimport WebWorker from '../utils/workerSetup'\nimport styles from './Clock.module.css'\n\nclass Clock extends Component {\n  running = false\n  componentDidMount() {\n    // Use Web Worker to prevent browser from\n    // buffering timer intervals\n    this.worker = new WebWorker(worker)\n  }\n  componentDidUpdate() {\n    if (!this.running && this.props.running) {\n      this.running = true\n      this.startTimer()\n    } else if (this.running && !this.props.running) {\n      this.running = false\n      this.stopTimer()\n    }\n  }\n  componentWillUnmount() {\n    this.worker.terminate()\n  }\n  startTimer() {\n    this.worker.postMessage('start')\n    this.worker.addEventListener('message', event => {\n      if (event.data === 'tick') {\n        this.tick()\n      }\n    })\n  }\n  stopTimer() {\n    this.worker.postMessage('stop')\n  }\n  tick() {\n    const { elapsedTime, setElapsedTime, setTimer } = this.props\n    const newTime = elapsedTime + 1\n    setElapsedTime(newTime)\n    if (newTime > this.currentDuration) {\n      Alarm.play()\n      this.stopTimer()\n      setTimer(this.sessionTimerRunning ? BREAK_TIMER : SESSION_TIMER)\n      setElapsedTime(0)\n      this.startTimer()\n    }\n  }\n  get sessionTimerRunning() {\n    return this.props.currentTimer === SESSION_TIMER\n  }\n  get currentDuration() {\n    const { duration, breakDuration } = this.props\n    return this.sessionTimerRunning ? duration : breakDuration\n  }\n  render() {\n    const { elapsedTime } = this.props\n    return (\n      <div className={styles.clock}>\n        <Display seconds={this.currentDuration - elapsedTime}></Display>\n        <Timer total={this.currentDuration} current={elapsedTime} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  running: state.running,\n  duration: state.duration,\n  breakDuration: state.breakDuration,\n  elapsedTime: state.elapsedTime,\n  currentTimer: state.timerType,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setElapsedTime: time => dispatch(setElapsedTime(time)),\n  setTimer: timerType => dispatch(setTimer(timerType)),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Clock)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  toggleRunning,\n  stopTimer,\n  setDuration,\n  setBreakDuration,\n  setElapsedTime,\n  DEFAULT_DURATION,\n  DEFAULT_BREAK_DURATION,\n  setTimer,\n  SESSION_TIMER,\n} from '../actions'\nimport Alarm from '../utils/Alarm'\nimport styles from './ControlPanel.module.css'\n\nclass ControlPanel extends Component {\n  constructor() {\n    super()\n    this.toggleRunning = this.toggleRunning.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n  toggleRunning() {\n    this.props.toggleRunning()\n  }\n  reset() {\n    this.props.stopTimer()\n    this.props.setTimer(SESSION_TIMER)\n    this.props.setDuration(DEFAULT_DURATION)\n    this.props.setBreakDuration(DEFAULT_BREAK_DURATION)\n    this.props.setElapsedTime(0)\n    Alarm.stop()\n  }\n  render() {\n    return (\n      <div className={styles.controlPanel}>\n        {!this.props.running && (\n          <span onClick={this.toggleRunning}>\n            <img src=\"./icons/play-arrow.svg\" alt=\"start timer\" />\n          </span>\n        )}\n        {this.props.running && (\n          <span onClick={this.toggleRunning}>\n            <img src=\"./icons/pause-button.svg\" alt=\"pause timer\" />\n          </span>\n        )}\n        <span onClick={this.reset}>\n          <img src=\"./icons/reset.svg\" alt=\"reset timer\" />\n        </span>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  running: state.running,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  toggleRunning: () => dispatch(toggleRunning()),\n  stopTimer: () => dispatch(stopTimer()),\n  setDuration: duration => dispatch(setDuration(duration)),\n  setBreakDuration: duration => dispatch(setBreakDuration(duration)),\n  setElapsedTime: time => dispatch(setElapsedTime(time)),\n  setTimer: timerType => dispatch(setTimer(timerType)),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ControlPanel)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { setDuration, setBreakDuration } from '../actions'\nimport styles from './Session.module.css'\n\nclass Session extends Component {\n  increment = () => {\n    if (this.props.running) return\n    if (this.props.pomodoro) {\n      if (this.props.duration < 3600) {\n        this.props.setDuration(this.props.duration + 60)\n      }\n    } else {\n      if (this.props.breakDuration < 1800) {\n        this.props.setBreakDuration(this.props.breakDuration + 60)\n      }\n    }\n  }\n  decrement = () => {\n    if (this.props.running) return\n    if (this.props.pomodoro) {\n      if (this.props.duration > 60) {\n        this.props.setDuration(this.props.duration - 60)\n      }\n    } else {\n      if (this.props.breakDuration > 0) {\n        this.props.setBreakDuration(this.props.breakDuration - 60)\n      }\n    }\n  }\n  render() {\n    const duration = this.props.pomodoro\n      ? this.props.duration\n      : this.props.breakDuration\n    const minutesSeconds = `${duration / 60}:00`\n    return (\n      <div>\n        <div className={styles.title}>{this.props.title}</div>\n        <div className={styles.session}>\n          <span className={styles.down} onClick={this.decrement}>\n            <img\n              className={styles.invert}\n              src=\"./icons/arrow-up.svg\"\n              alt=\"down arrow\"\n            />\n          </span>\n          <span className={styles.duration}>{minutesSeconds}</span>\n          <span className={styles.up} onClick={this.increment}>\n            <img src=\"./icons/arrow-up.svg\" alt=\"up arrow\" />\n          </span>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  running: state.running,\n  duration: state.duration,\n  breakDuration: state.breakDuration,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setDuration: duration => dispatch(setDuration(duration)),\n  setBreakDuration: duration => dispatch(setBreakDuration(duration)),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Session)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Activity from './components/Activity'\nimport Clock from './components/Clock'\nimport ControlPanel from './components/ControlPanel'\nimport Session from './components/Session'\nimport './App.css'\n\nfunction App(props) {\n  const opacity = props.running ? '0.2' : '1'\n  return (\n    <div className=\"App\">\n      <h1>Pomodoro Clock</h1>\n      <div style={{ opacity }} id=\"sessions\">\n        <Session title=\"session Length\" pomodoro />\n        <Session title=\"break Length\" />\n      </div>\n      <Activity />\n      <Clock />\n      <ControlPanel />\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  running: state.running,\n})\n\nexport default connect(mapStateToProps)(App)\n","import {\n  TOGGLE_RUNNING,\n  STOP_TIMER,\n  SET_DURATION,\n  SET_BREAK_DURATION,\n  DEFAULT_DURATION,\n  DEFAULT_BREAK_DURATION,\n  SELECT_TIMER,\n  SET_ELAPSED_TIME,\n  SESSION_TIMER,\n  BREAK_TIMER,\n} from '../actions'\n\nconst defaultState = {\n  running: false,\n  elapsedTime: 0,\n  duration: DEFAULT_DURATION,\n  breakDuration: DEFAULT_BREAK_DURATION,\n  timerType: SESSION_TIMER,\n}\n\nconst pomodoro = (state = defaultState, action) => {\n  switch (action.type) {\n    case TOGGLE_RUNNING:\n      return {\n        ...state,\n        running: !state.running,\n      }\n    case STOP_TIMER:\n      return {\n        ...state,\n        running: false,\n      }\n    case SET_DURATION:\n      return {\n        ...state,\n        duration: action.duration,\n      }\n    case SET_BREAK_DURATION:\n      return {\n        ...state,\n        breakDuration: action.breakDuration,\n      }\n    case SELECT_TIMER:\n      const { timerType } = action\n      if (timerType === SESSION_TIMER || timerType === BREAK_TIMER) {\n        return {\n          ...state,\n          timerType,\n        }\n      }\n      return state\n    case SET_ELAPSED_TIME:\n      return {\n        ...state,\n        elapsedTime: action.elapsedTime,\n      }\n    default:\n      return state\n  }\n}\n\nexport default pomodoro\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport './index.css'\nimport App from './App'\nimport reducer from './reducers'\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}